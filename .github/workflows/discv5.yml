# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches:
      - "*"
  pull_request:
    branches: 
      - "*"

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout branch 
        uses: actions/checkout@v2
      
      - name: Get changed files
        id: file-changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: 'json'
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Print changed files
        run: echo "Files changed are ${{ steps.file-changes.outputs.files }}"
    
      - name: Build Project_Enr if changed
        if: contains(steps.file-changes.outputs.files_modified, 'Lantern.Discv5.Enr') || contains(steps.file-changes.outputs.files_added, 'Lantern.Discv5.Enr')
        run: dotnet build src/Lantern.Discv5.Enr/Lantern.Discv5.Enr.csproj
        
      - name: Build Project_Rlp if changed
        if: contains(steps.file-changes.outputs.files_modified, 'Lantern.Discv5.Rlp') || contains(steps.file-changes.outputs.files_added, 'Lantern.Discv5.Rlp')
        run: dotnet build src/Lantern.Discv5.Rlp/Lantern.Discv5.Rlp.csproj
      
      - name: Build Project_WriteProtocol if changed
        if: contains(steps.file-changes.outputs.files_modified, 'Lantern.Discv5.WireProtocol') || contains(steps.file-changes.outputs.files_added, 'Lantern.Discv5.WireProtocol')
        run: dotnet build src/Lantern.Discv5.WireProtocol/Lantern.Discv5.WireProtocol.csproj

      - name: Test Setup
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
      - name: Run tests and generate cobertura coverage report 
        run: dotnet test --verbosity normal --collect:"XPlat Code Coverage"
      - name: Integrate with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
