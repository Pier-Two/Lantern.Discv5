# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches:
      - "*"
  pull_request:
    branches: 
      - "*"

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout banch 
        uses: actions/checkout@v2
      
      - name: Get changed files
        id: file-changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: 'json'
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Print changed files
        run: echo "${{ steps.file-changes.outputs.files }}"
    
      - name: Build Project_Enr if changed
        if: contains(steps.file-changes.outputs.files_modified, 'Lantern.Discv5.Enr') || contains(steps.file-changes.outputs.files_added, 'Lantern.Discv5.Enr')
        run: dotnet build Lantern.Discv5.Enr/Lantern.Discv5.Enr.csproj
        
      - name: Build Project_Rlp if changed
        if: contains(steps.file-changes.outputs.files_modified, 'Lantern.Discv5.Rlp') || contains(steps.file-changes.outputs.files_added, 'Lantern.Discv5.Rlp')
        run: dotnet build Lantern.Discv5.Rlp/Lantern.Discv5.Rlp.csproj
      
      - name: Build Project_Tests if changed
        if: contains(steps.file-changes.outputs.files_modified, 'Lantern.Discv5.Tests') || contains(steps.file-changes.outputs.files_added, 'Lantern.Discv5.Tests')
        run: dotnet build Lantern.Discv5.Tests/Lantern.Discv5.Tests.csproj
      
      - name: Build Project_Topic if changed
        if: contains(steps.file-changes.outputs.files_modified, 'Lantern.Discv5.Topic') || contains(steps.file-changes.outputs.files_added, 'Lantern.Discv5.Topic')
        run: dotnet build Lantern.Discv5.Topic/Lantern.Discv5.Topic.csproj
  sonar:
    name: Build and analyze SonarCloud
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Pier-Two_Lantern.Discv5" /o:"pier-two" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
